---
import "../style.css";

interface Props {
	title: string;
}

const { title }: Props = Astro.props;
---

<html class="dark" lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1" />
		<link rel="icon" type="image/png" href="/favicon.png" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>

		<!-- Primary Meta Tags -->
		<meta name="title" content={title} />
		<meta name="description" content="All things Skript - documentation, tutorials and more." />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://skriptlang.org" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content="All things Skript - documentation, tutorials and more." />
		<meta property="og:image" content="/banner.png" />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content="https://skriptlang.org" />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content="All things Skript - documentation, tutorials and more." />
		<meta property="twitter:image" content="/banner.png" />

		<!-- Meta Tags Generated with https://metatags.io -->

		<script>
			const toggleMode = (darkToggle: HTMLButtonElement, lightToggle: HTMLButtonElement) => {
				if (prefersDarkScheme()) {
					localStorage.theme = "dark";
					lightToggle.classList.remove("hidden");
					darkToggle.classList.add("hidden");
				} else {
					localStorage.theme = "light";
					lightToggle.classList.add("hidden");
					darkToggle.classList.remove("hidden");
				}

				lightToggle.addEventListener("click", () => {
					document.documentElement.classList.remove("dark");
					localStorage.theme = "light";
					lightToggle.classList.add("hidden");
					darkToggle.classList.remove("hidden");
				});

				darkToggle.addEventListener("click", () => {
					document.documentElement.classList.add("dark");
					localStorage.theme = "dark";
					lightToggle.classList.remove("hidden");
					darkToggle.classList.add("hidden");
				});
			}

			const prefersDarkScheme = () => localStorage.theme === "dark" 
				|| (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches);

			document.documentElement.classList.toggle(
				"dark",
				prefersDarkScheme()
			);

			const darkToggle = document.getElementById("dark-toggle")!!;
			const lightToggle = document.getElementById("light-toggle")!!;

			toggleMode(darkToggle as HTMLButtonElement, lightToggle as HTMLButtonElement);

			const darkToggleM = document.getElementById("dark-toggle-mobile")!!;
			const lightToggleM = document.getElementById("light-toggle-mobile")!!;

			toggleMode(darkToggleM as HTMLButtonElement, lightToggleM as HTMLButtonElement);
			</script>
	</head>
	<body id="body" class="bg-l-bg dark:bg-d-bg 
				text-black dark:text-white 
				fill-black dark:fill-white
				overflow-x-hidden">
		<slot />
	</body>
</html>
