---
import DocsSyntax, { type Syntax } from './DocsSyntax.astro';

interface Props {
    syntaxes: Syntax[];
}

const { syntaxes }: Props = Astro.props;

// Group syntaxes by category
const grouped = syntaxes.reduce((acc, syntax) => {
    const category = syntax.category ?? "Other";
    if (!acc[category]) acc[category] = [];
    acc[category].push(syntax);
    return acc;
}, {} as Record<string, Syntax[]>);

// Put categories first, "Other" last
let categories = Object.keys(grouped).filter(c => c !== "Other").sort();
categories.push("Other");
---

<script>
    // Update position of filters to be below the nav bar,
    // since filters is sticky this cant be done directly
    document.getElementById("syntax")!!.style.top = `${document.getElementById("nav")!!.offsetHeight}px`;

    document.querySelectorAll(".category-heading").forEach(heading => {
        heading.addEventListener("click", () => {
            const next = heading.nextElementSibling as HTMLElement | null;
            if (next) {
                heading.classList.toggle("sticky");
                next.classList.toggle("hidden");
                next.classList.toggle("flex");
            }
        });
    })
</script>

<div id="syntax" class="sticky left-0 top-30 w-64 h-[87vh] p-0 lg:px-4
            hidden lg:flex flex-col shrink-0
            border-r-2 border-l-border dark:border-d-border overflow-y-auto">
    <h2 class="mt-4">Syntax</h2>
    
    {categories.map(category => (
        <button class="category-heading bg-l-bg dark:bg-d-bg top-0 text-left hover:cursor-pointer py-1">
            <h3>{category}</h3>
        </button>
        <div class="hidden flex-col">
            {grouped[category].map(syntax => <DocsSyntax syntax={syntax} />)}
        </div>
    ))}
</div>
